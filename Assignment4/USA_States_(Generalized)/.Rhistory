# display the map
m
library(leaflet)
# create a map
m <- leaflet() %>%
setView(lng = -93.648, lat = 42.0267, zoom = 15)  # set the initial view on Iowa State University
# add 20 markers with custom icon
locations <- data.frame(
name = paste0("Marker ", 1:20),
lon = runif(20, -93.662, -93.634),
lat = runif(20, 42.009, 42.042)
)
myIcon <- makeIcon(iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-red.png",
iconWidth = 38, iconHeight = 95)
m <- addMarkers(map = m, data = locations, ~lon, ~lat, popup = ~name, icon = myIcon,
clusterOptions = markerClusterOptions())
# add basemap layers and control
m <- addTiles(map = m, urlTemplate = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
attribution = "Map data © <a href='https://openstreetmap.org'>OpenStreetMap</a> contributors")
m <- addProviderTiles(map = m, providers$Esri.WorldTopoMap, group = "Esri")
m <- addProviderTiles(map = m, providers$Esri.WorldImagery, group = "Esri")
m <- addProviderTiles(map = m, providers$Stamen.Toner, group = "Stamen")
m <- addProviderTiles(map = m, providers$Stamen.Terrain, group = "Stamen")
m <- addLayersControl(map = m, baseGroups = c("OpenStreetMap", "Esri", "Stamen"),
options = layersControlOptions(collapsed = FALSE))
# display the map
m
m <- addTiles(map = m, urlTemplate = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
attribution = "Map data © <a href='https://openstreetmap.org'>OpenStreetMap</a> contributors")
m <- addProviderTiles(map = m, providers$Esri.WorldTopoMap, group = "Esri")
m <- addProviderTiles(map = m, providers$Esri.WorldImagery, group = "Esri")
m <- addProviderTiles(map = m, providers$Stamen.Toner, group = "Stamen")
m <- addProviderTiles(map = m, providers$Stamen.Terrain, group = "Stamen")
m <- addLayersControl(map = m, baseGroups = c("OpenStreetMap", "Esri", "Stamen"),
options = layersControlOptions(collapsed = FALSE))
# display the map
m
# load required libraries
library(leaflet)
library(rgdal)
library(RColorBrewer)
# load the shapefile
setwd("C:/Spring 2023/CRP 558/LA-558/GisData/States_shapefile")
shp <- readOGR(dsn = ".", layer = States_shapefile.shp)
# load the shapefile
setwd("C:/Spring 2023/CRP 558/LA-558/GisData/States_shapefile")
shp <- readOGR(dsn = ".", layer = States_shapefile.shp)
library(leaflet)
library(rgdal)
# Import shapefile and set projection
us_states <- readOGR(dsn = "path/to/shapefile", layer = "us_states")
# Import shapefile and set projection
us_states <- readOGR(dsn = "C:/Spring 2023/CRP 558/LA-558/GisData/States_shapefile", layer = "us_states")
# Import shapefile and set projection
us_states <- readOGR(dsn = "C:/Spring 2023/CRP 558/LA-558/GisData/States_shapefile", layer = "us_states")
# Import shapefile and set projection
us_states <- readOGR(dsn = "C:/Spring 2023/CRP 558/LA-558/GisData/States_shapefile", layer = "States_shapefile.shp")
us_states <- spTransform(us_states, CRS("+proj=longlat +datum=WGS84"))
# Import shapefile and set projection
us_states <- readOGR(dsn = "C:/Spring 2023/CRP 558/LA-558/GisData/States_shapefile", layer = "States_shapefile.shp")
# Import shapefile and set projection
us_states <- readOGR(dsn = "C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)", layer = "USA_States_Generalized.shp")
install.packages("rgdal")
install.packages("readOGR")
# Import shapefile and set projection
us_states <- readOGR(dsn = "C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)", layer = "USA_States_Generalized.shp")
library(readOGR)
# Import shapefile and set projection
us_states <- readOGR(dsn = "C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)", layer = "USA_States_Generalized")
us_states <- spTransform(us_states, CRS("+proj=longlat +datum=WGS84"))
# Create chloropleth map based on population density
pal <- colorNumeric(palette = "Blues", domain = us_states@data$population_density)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1,
popup = paste("<b>", us_states$NAME, "</b><br>",
"Population Density: ", us_states$population_density)) %>%
addLegend(pal = pal, values = us_states@data$population_density,
title = "Population Density (people per sq. mile)",
position = "bottomright")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1) %>%
addLabelOnlyMarkers(data = us_states,
label = ~NAME,
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
lng = ~coordinates(.)[1],
lat = ~coordinates(.)[2])
pal <- colorNumeric(palette = "Blues", domain = us_states@data$population_density)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1,
popup = paste("<b>", us_states$NAME, "</b><br>",
"Population Density: ", us_states$population_density)) %>%
addLegend(pal = pal, values = us_states@data$population_density,
title = "Population Density (people per sq. mile)",
position = "bottomright")
# Create chloropleth map based on population density
pal <- colorNumeric(palette = "Blues", domain = us_states@data$population_density)
pal
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1,
popup = paste("<b>", us_states$NAME, "</b><br>",
"Population Density: ", us_states$population_density)) %>%
addLegend(pal = pal, values = us_states@data$population_density,
title = "Population Density (people per sq. mile)",
position = "bottomright")
# Create chloropleth map based on population density
pal <- colorNumeric(palette = "Blues", domain = us_states@data$population_density)
pal
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1,
popup = paste("<b>", us_states$NAME, "</b><br>",
"Population Density: ", us_states$population_density)) %>%
addLegend(pal = pal, values = us_states@data$population_density,
title = "Population Density (people per sq. mile)",
position = "bottomright")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1,
popup = paste("<b>", us_states$NAME, "</b><br>",
"Population Density: ", us_states$population_density)) %>%
addLegend(pal = pal, values = us_states@data$population_density,
title = "Population Density (people per sq. mile)",
position = "bottomright")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1,
popup = paste("<b>", us_states$NAME, "</b><br>",
"Population Density: ", us_states$population_density)) %>%
addLegend(pal = pal, values = us_states@data$population_density,
title = "Population Density (people per sq. mile)",
position = "bottomright")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = us_states,
fillColor = ~pal(population_density),
fillOpacity = 0.8,
color = "#b2b2b2",
weight = 1) %>%
addLabelOnlyMarkers(data = us_states,
label = ~NAME,
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
lng = ~coordinates(.)[1],
lat = ~coordinates(.)[2])
# Set working directory to where shapefile is located
setwd("C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)")
# Import shapefile
my_shp <- readOGR(".", "USA_States_Generalized")
# Set projection
my_shp <- spTransform(my_shp, CRS("+proj=longlat +datum=WGS84"))
# Create color palette for chloropleth
mypalette <- colorRampPalette(brewer.pal(9, "YlGn"))
# Create Leaflet map
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1)  # Set border weight
# Set working directory to where shapefile is located
setwd("C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)")
# Import shapefile
my_shp <- readOGR(".", "USA_States_Generalized")
# Set projection
my_shp <- spTransform(my_shp, CRS("+proj=longlat +datum=WGS84"))
# Create color palette for chloropleth
mypalette <- colorRampPalette(brewer.pal(9, "YlGn"))
# Create Leaflet map
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION)) %>%
# You can customize the popup contents as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# Create Leaflet map
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION)) %>%
# You can customize the popup contents as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# Create Leaflet map
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION)) %>%
# You can customize the popup contents as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# Create Leaflet map
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION)) %>%
# You can customize the popup contents as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# Create color palette for chloropleth
mypalette <- colorRampPalette(brewer.pal(9, "YlGn"))
# Create Leaflet map
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION)) %>%
# You can customize the popup contents as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
mypalette <- colorRampPalette(brewer.pal(9, "YlGn"))
# Create Leaflet map
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION))
# Create Leaflet map
map4 <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION))
map4
# You can customize the popup contents as needed
map4 %>% addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# You can customize the popup contents as needed
map4 %>% addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# Load required packages
library(leaflet)
library(sp)
library(rgdal)
library(RColorBrewer)
# Set working directory to where shapefile is located
setwd("C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)")
# Import shapefile
my_shp <- readOGR(".", "USA_States_Generalized")
# Set projection
my_shp <- spTransform(my_shp, CRS("+proj=longlat +datum=WGS84"))
# Create color palette for chloropleth
mypalette <- colorRampPalette(brewer.pal(9, "YlGn"))
# Create Leaflet map
map4 <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION))
map4
# You can customize the popup contents as needed
map5 <- map4 %>% addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# You can customize the label contents as needed
map5
# Load required packages
library(leaflet)
library(sp)
library(rgdal)
library(RColorBrewer)
# Set working directory to where shapefile is located
setwd("C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)")
# Import shapefile
my_shp <- readOGR(".", "USA_States_Generalized")
# Set projection
my_shp <- spTransform(my_shp, CRS("+proj=longlat +datum=WGS84"))
# Create color palette for chloropleth
mypalette <- colorRampPalette(brewer.pal(9, "YlGn"))
# Create Leaflet map
map4 <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION))
map4
# You can customize the popup contents as needed
map5 <- map4 %>% addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(5),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
label = my_shp$NAME)  # Set label contents
# You can customize the label contents as needed
map5
setwd("C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)")
# Import shapefile
my_shp <- readOGR(".", "USA_States_Generalized")
# Set projection
my_shp <- spTransform(my_shp, CRS("+proj=longlat +datum=WGS84"))
# Create color palette for chloropleth
mypalette <- colorNumeric(palette = "YlGn", domain = my_shp$POPULATION)
# Create Leaflet map
map4 <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(my_shp$POPULATION),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION))
map4
map5< - map4 %>%  # You can customize the popup contents as needed
addLegend(pal = mypalette, values = my_shp$POPULATION,  # Add legend for chloropleth
title = "Population", position = "bottomright") %>%
# You can customize the legend title and position as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(my_shp$POPULATION),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight,
label = my_shp$NAME)
map5<- map4 %>%  # You can customize the popup contents as needed
addLegend(pal = mypalette, values = my_shp$POPULATION,  # Add legend for chloropleth
title = "Population", position = "bottomright") %>%
# You can customize the legend title and position as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(my_shp$POPULATION),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight,
label = my_shp$NAME)
map5
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -122.4194, lat = 37.7749,  # Add markers for San Francisco
popup = "San Francisco", label = "SF")  # Set popup and label contents
# You can customize the popup and label contents as needed
map6
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -122.4194, lat = 37.7749,  # Add markers for San Francisco
popup = "Iowa", label = "Iowa")  # Set popup and label contents
# You can customize the popup and label contents as needed
map6
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -93.6199, lat = 42.0261, zoom = 13,  # Add markers for San Francisco
popup = "Iowa", label = "Iowa")  # Set popup and label contents
# You can customize the popup and label contents as needed
map6
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -93.6199, lat = 42.0261, zoom = 13,  # Add markers for San Francisco
popup = "Iowa", label = "Iowa")  # Set popup and label contents
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -93.6199, lat = 42.0261, zoom = 13,  # Add markers for San Francisco
popup = "Iowa", label = "Iowa")  # Set popup and label contents
# You can customize the popup and label contents as needed
map6
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -93.6199, lat = 42.0261,  # Add markers for San Francisco
popup = "Iowa", label = "Iowa")  # Set popup and label contents
# You can customize the popup and label contents as needed
map6
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -93.6199, lat = 42.0261,  # Add markers for San Francisco
popup = "Iowa", label = "Lovely Iowa")  # Set popup and label contents
# You can customize the popup and label contents as needed
map6
# 2.Create a Leaflet page in R that includes a chloropleth. Import your shapefile and set the projection as demonstrated. Due two of the following
# Add a Popup or a label
# Add a Legend
# Add an additional layers containing lines or markers.
# Load required packages
library(leaflet)
library(sp)
library(rgdal)
library(RColorBrewer)
# Set working directory to where shapefile is located
setwd("C:/Spring 2023/CRP 558/LA-558/Assignment4/USA_States_(Generalized)")
# Import shapefile
my_shp <- readOGR(".", "USA_States_Generalized")
# Set projection
my_shp <- spTransform(my_shp, CRS("+proj=longlat +datum=WGS84"))
# Create color palette for chloropleth
mypalette <- colorNumeric(palette = "YlGn", domain = my_shp$POPULATION)
# Create Leaflet map
map4 <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(my_shp$POPULATION),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight
popup = paste("<b>", my_shp$NAME, "</b><br>",  # Set popup contents
"Population: ", my_shp$POPULATION))
map4
map5<- map4 %>%  # You can customize the popup contents as needed
addLegend(pal = mypalette, values = my_shp$POPULATION,  # Add legend for chloropleth
title = "Population", position = "bottomright") %>%
# You can customize the legend title and position as needed
addPolygons(data = my_shp,  # Add polygons from shapefile
fillColor = mypalette(my_shp$POPULATION),  # Set fill color using palette
fillOpacity = 0.7,  # Set fill opacity
color = "#BDBDC3",  # Set border color
weight = 1,  # Set border weight,
label = my_shp$NAME)
map5
map6 <- map5 %>%  # Set label contents
# You can customize the label contents as needed
addMarkers(lng = -93.6199, lat = 42.0261,  # Add markers for San Francisco
popup = "Iowa", label = "Lovely Iowa")  # Set popup and label contents
# You can customize the popup and label contents as needed
map6
